name: Deploy Infra and Configure EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Terraform Deployment
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1

    outputs:
      EC2_IP: ${{ steps.get_ec2_ip.outputs.ec2_ip }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan and Apply
        run: |
          cd terraform
          terraform plan -out=tfplan
          terraform validate  
          terraform apply -auto-approve tfplan

      - name: Get EC2 public IP
        id: get_ec2_ip
        run: |
          cd terraform
          IP=$(terraform output -raw public_ip 2>/dev/null || echo "")
          if [ -z "$IP" ]; then
            echo "EC2 public IP not found. Exiting."
            exit 1
          fi
          echo "ec2_ip=$IP" >> $GITHUB_OUTPUT

  # ansible:
  #   name: Ansible Configuration
  #   runs-on: ubuntu-latest
  #   needs: deploy

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Install Ansible
  #       run: sudo apt-get update && sudo apt-get install -y ansible
      
  #     - name: Install Python dependencies
  #       run: |
  #         cd ansible
  #         ls -la
  #         pwd
        
  #     - name: Copy SSH Key
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
  #         chmod 600 ~/.ssh/id_rsa

  #     - name: Create Ansible inventory file
  #       run: |
  #         echo "[web]" > inventory.ini
  #         echo "${{ needs.deploy.outputs.EC2_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

  #     - name: Ping EC2 host
  #       run: ansible all -i inventory.ini -m ping

  #     - name: Run Ansible playbook
  #       run: ansible-playbook -i inventory.ini deploy.yaml
